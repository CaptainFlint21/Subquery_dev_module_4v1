{"version":3,"file":"init-controller.js","sourceRoot":"","sources":["../../src/controller/init-controller.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport childProcess, {execSync} from 'child_process';\nimport fs from 'fs';\nimport * as path from 'path';\nimport {promisify} from 'util';\nimport {ProjectManifestV0_0_1, ProjectManifestV0_2_0} from '@subql/common';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport rimraf from 'rimraf';\nimport git from 'simple-git';\nimport {isProjectSpecV0_2_0, ProjectSpecBase} from '../types';\n\nconst TEMPLATES_REMOTE = 'https://raw.githubusercontent.com/subquery/templates/main/templates.json';\n\nexport interface Template {\n  name: string;\n  description: string;\n  remote: string;\n  branch: string;\n  network: string;\n  endpoint: string;\n  specVersion: string;\n}\n\nexport async function fetchTemplates(remote: string = TEMPLATES_REMOTE): Promise<Template[]> {\n  return axios\n    .create()\n    .get(remote)\n    .then(({data}) => data as Template[])\n    .catch((err) => {\n      throw new Error(`Unable to reach endpoint '${remote}', ${err}`);\n    });\n}\n\nexport async function cloneProjectGit(\n  localPath: string,\n  projectName: string,\n  projectRemote: string,\n  branch: string\n): Promise<string> {\n  const projectPath = path.join(localPath, projectName);\n  try {\n    await git().clone(projectRemote, projectPath, ['-b', branch, '--single-branch']);\n  } catch (e) {\n    let err = 'Failed to clone starter template from git';\n    try {\n      execSync('git --version');\n    } catch (_) {\n      err += ', please install git and ensure that it is available from command line';\n    }\n    throw new Error(err);\n  }\n  return projectPath;\n}\n\nexport async function cloneProjectTemplate(\n  localPath: string,\n  projectName: string,\n  template: Template\n): Promise<string> {\n  const projectPath = path.join(localPath, projectName);\n  try {\n    await git().clone(template.remote, projectPath, ['-b', template.branch, '--single-branch']);\n  } catch (e) {\n    let err = 'Failed to clone starter template from git';\n    try {\n      execSync('git --version');\n    } catch (_) {\n      err += ', please install git and ensure that it is available from command line';\n    }\n    throw new Error(err);\n  }\n  return projectPath;\n}\n\nexport async function readDefaults(projectPath: string): Promise<string[]> {\n  const packageData = await fs.promises.readFile(`${projectPath}/package.json`);\n  const currentPackage = JSON.parse(packageData.toString());\n\n  const yamlPath = path.join(`${projectPath}`, `project.yaml`);\n  const manifest = await fs.promises.readFile(yamlPath, 'utf8');\n  const currentProject = yaml.load(manifest) as ProjectManifestV0_0_1 | ProjectManifestV0_2_0;\n  return [\n    currentProject.specVersion,\n    currentProject.repository,\n    currentProject.network.endpoint,\n    currentPackage.author,\n    currentPackage.version,\n    currentPackage.description,\n    currentPackage.license,\n  ];\n}\n\nexport async function prepare(projectPath: string, project: ProjectSpecBase): Promise<void> {\n  try {\n    await prepareManifest(projectPath, project);\n  } catch (e) {\n    throw new Error('Failed to prepare read or write manifest while preparing the project');\n  }\n  try {\n    await preparePackage(projectPath, project);\n  } catch (e) {\n    throw new Error('Failed to prepare read or write package.json while preparing the project');\n  }\n  try {\n    await promisify(rimraf)(`${projectPath}/.git`);\n  } catch (e) {\n    throw new Error('Failed to remove .git from template project');\n  }\n  try {\n    await promisify(rimraf)(`${projectPath}/.github`);\n  } catch (e) {\n    throw new Error('Failed to remove .github from template project');\n  }\n}\n\nasync function preparePackage(projectPath: string, project: ProjectSpecBase): Promise<void> {\n  //load and write package.json\n  const packageData = await fs.promises.readFile(`${projectPath}/package.json`);\n  const currentPackage = JSON.parse(packageData.toString());\n  currentPackage.name = project.name;\n  currentPackage.version = project.version;\n  currentPackage.description = project.description ?? currentPackage.description;\n  currentPackage.author = project.author;\n  currentPackage.license = project.license;\n  const newPackage = JSON.stringify(currentPackage, null, 2);\n  await fs.promises.writeFile(`${projectPath}/package.json`, newPackage, 'utf8');\n}\n\nasync function prepareManifest(projectPath: string, project: ProjectSpecBase): Promise<void> {\n  //load and write manifest(project.yaml)\n  const yamlPath = path.join(`${projectPath}`, `project.yaml`);\n  const manifest = await fs.promises.readFile(yamlPath, 'utf8');\n  const data = yaml.load(manifest) as ProjectManifestV0_0_1 | ProjectManifestV0_2_0;\n  data.description = project.description ?? data.description;\n  data.repository = project.repository ?? '';\n\n  data.network.endpoint = project.endpoint;\n\n  if (isProjectSpecV0_2_0(project)) {\n    (data as ProjectManifestV0_2_0).version = project.version;\n    (data as ProjectManifestV0_2_0).name = project.name;\n    data.network.genesisHash = project.genesisHash;\n  }\n\n  const newYaml = yaml.dump(data);\n  await fs.promises.writeFile(yamlPath, newYaml, 'utf8');\n}\n\nexport function installDependencies(projectPath: string, useNpm?: boolean): void {\n  let command = 'yarn install';\n\n  if (useNpm || !checkYarnExists()) {\n    command = 'npm install';\n  }\n\n  childProcess.execSync(command, {cwd: projectPath});\n}\n\nfunction checkYarnExists(): boolean {\n  try {\n    childProcess.execSync('yarn --version');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n"]}